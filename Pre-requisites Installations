#---------------------------------
#  GCC/g++ compilers and libraries
#---------------------------------

# reload local package database
sudo apt-get update

# Install Build-Essential
sudo apt-get install build-essential


#----------------------
#  NODE & NPM
#----------------------

# add nodejs 10 ppa (personal package archive) from nodesource
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -

# install nodejs and npm
sudo apt-get install -y nodejs


#----------------------
#  MONGODB
#----------------------

# import mongodb 4.0 public gpg key
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

# create the /etc/apt/sources.list.d/mongodb-org-4.0.list file for mongodb
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

# reload local package database
sudo apt-get update

# install the latest version of mongodb
sudo apt-get install -y mongodb-org

# start mongodb
sudo systemctl start mongod

# set mongodb to start automatically on system startup
sudo systemctl enable mongod


#----------------------
#  PM2
#----------------------

# install pm2 with npm
sudo npm install -g pm2

# set pm2 to start automatically on system startup
sudo pm2 startup systemd


#----------------------
#  NGINX
#----------------------

# install nginx
sudo apt-get install -y nginx


#----------------------
#  UFW (FIREWALL)
#----------------------

# allow ssh connections through firewall
sudo ufw allow OpenSSH

# allow http & https through firewall
sudo ufw allow 'Nginx Full'

# allow port 3000 for Back End
sudo ufw allow 3000

# enable firewall
sudo ufw --force enable

#----------------
# SSL & HTTPS
#----------------

#Add Certbot PPA

sudo apt-get update
sudo apt-get install software-properties-common
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update

# Install Certbot

sudo apt-get install certbot python-certbot-nginx

# Run this command to get a certificate and have Certbot edit your Nginx configuration automatically to serve it, turning on HTTPS access in a single step.

sudo certbot --nginx

# allow port 443 for SSL
sudo ufw allow 443

#----------------------
# Dynamic Update Client
#----------------------

cd /usr/local/src/
sudo wget http://www.no-ip.com/client/linux/noip-duc-linux.tar.gz
sudo tar xf noip-duc-linux.tar.gz
cd noip-2.1.9-1/
sudo make install

#---------------
# JAVA & Jenkins
#---------------

# Install Java
sudo apt install default-jre 

# Add the repository key to the system:
wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
# When the key is added, the system will return OK.

# Append the Debian package repository address to the serverâ€™s sources.list:
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

sudo apt-get update

# Install Jenkins and its dependencies:
sudo apt-get install jenkins

# By default, Jenkins runs on port 8080
sudo ufw allow 8080

#---------
# Apache2
#---------

sudo apt install apache2
sudo ufw allow 'Apache Full'
